board = [1, 2, 3, 4, 5, 6, 7, 8, 9]


def display_board(board):
    grid = '''
+-------+-------+-------+
|       |       |       |
|   {}   |   {}   |   {}   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   {}   |   {}   |   {}   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   {}   |   {}   |   {}   |
|       |       |       |
+-------+-------+-------+
'''
    print(grid.format(*board))
display_board(board)
    
    # The function accepts one parameter containing the board's current status
    # and prints it out to the console.


def enter_move(board):
    try:
        move = int(input("Enter Your Move: "))
        if 9 < move < 1:
            move / 0
        board[move-1] - 1
    except:
        print('Please choose an available spot 1-9')
        enter_move(board)
    
    board[move-1] = 'O'

    display_board(board)
    
    if victory_for(board, 'O') == True:
        print('Good Game! You Win!')
    elif victory_for(board, 'O') == False:
        draw_move(board)

#make_list_of_free_fields(board)
def victory_for(board, sign):
    # Check rows
    for i in range(0, 9, 3):
        if board[i] == board[i + 1] == board[i + 2] == sign:
            return True

    # Check columns
    for i in range(3):
        if board[i] == board[i + 3] == board[i + 6] == sign:
            return True

    # Check diagonals
    if board[0] == board[4] == board[8] == sign:
        return True
    if board[2] == board[4] == board[6] == sign:
        return True

    return False


def draw_move(board):
    free_spaces = []
    for i in board:
        if i != 'O' and i != 'X':
            free_spaces.append(i)
    print(free_spaces)
    for s in free_spaces:
        if s is None:
            break
        elif s is type(str):
            continue
        else:
            board[s-1] = 'X'
        break
    display_board(board)
    if victory_for(board, 'X') == True:
        print('Good Game! The Computer has Won')    
    elif victory_for(board, 'X') == False:
        enter_move(board)    






enter_move(board)
